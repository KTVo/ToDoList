{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kevin\\\\OneDrive\\\\Documents\\\\GitHub\\\\ReactJs.NetCoreApiMSSQl\\\\frontend\\\\todoapp\\\\src\\\\App.js\";\nimport './App.css';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.API_URL = \"http://localhost:5009/\";\n    this.state = {\n      notes: []\n    };\n  }\n  //Runs when page refreshes\n  componentDidMount() {\n    this.refreshNotes();\n  }\n\n  //Method below will get notes from the API for this component\n  async refreshNotes() {\n    fetch(this.API_URL + \"api/ToDoApp/GetNotes\").then(response => response.json()).then(data => {\n      this.setState({\n        notes: data\n      });\n    });\n  }\n\n  //Method Adds a new task\n  async addNote() {\n    var newNotes = document.getElementById(\"newNotes\").value;\n    const data = new FormData();\n    data.append(\"newNotes\", newNotes);\n    fetch(this.API_URL + `api/ToDoApp/AddNotes`, {\n      method: 'POST',\n      body: data\n    }).then(response => response.json()).then(result => {\n      alert(result);\n      this.refreshNotes();\n    });\n    document.getElementById(`newNotes`).value = \"\";\n  } // End of addNote function\n\n  async editNote(id) {\n    var editNotes = document.getElementById(`editNotes_${id}`).value;\n    const data = new FormData();\n    data.append(\"editNotes\", editNotes);\n    fetch(this.API_URL + `api/ToDoApp/EditNotes?id=${id}`, {\n      method: 'POST',\n      body: data\n    }).then(response => response.json()).then(result => {\n      alert(result);\n      this.refreshNotes();\n    });\n    document.getElementById(`editNotes_${id}`).value = \"\";\n  } // End of editNote function\n\n  //Method will delete a note entry\n  async deleteNote(id) {\n    fetch(this.API_URL + `api/ToDoApp/DeleteNotes?id=${id}`, {\n      method: 'Delete',\n      //HTTP method for deletion\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(() => this.refreshNotes());\n  }\n  async clearAll() {\n    fetch(this.API_URL + `api/ToDoApp/ClearAll`, {\n      method: 'Delete',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(() => this.refreshNotes);\n  }\n  render() {\n    const {\n      notes\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Todo App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-container\",\n        children: notes.map(note => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"flex-column\",\n            children: [note.id, /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\"* \", note.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"flex-column\",\n            type: \"text\",\n            id: `editNotes_${note.id}`,\n            name: \"editNotes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"flex-column\",\n            onClick: () => this.editNote(note.id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"flex-column\",\n            onClick: () => this.deleteNote(note.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"auto\",\n          marginTop: \"1rem\",\n          borderStyle: \"solid\",\n          maxWidth: \"20%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add new Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"newNotes\",\n          name: \"newNotes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginBottom: \"1rem\"\n          },\n          onClick: () => this.addNote(),\n          children: \"Add Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Component","jsxDEV","_jsxDEV","Fragment","_Fragment","App","constructor","props","API_URL","state","notes","componentDidMount","refreshNotes","fetch","then","response","json","data","setState","addNote","newNotes","document","getElementById","value","FormData","append","method","body","result","alert","editNote","id","editNotes","deleteNote","headers","clearAll","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","note","description","type","name","onClick","style","margin","marginTop","borderStyle","maxWidth","marginBottom"],"sources":["C:/Users/Kevin/OneDrive/Documents/GitHub/ReactJs.NetCoreApiMSSQl/frontend/todoapp/src/App.js"],"sourcesContent":["import './App.css';\n\nimport { Component } from 'react';\n\nclass App extends Component {\n\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      notes: []\n    }\n  }\n\n  API_URL = \"http://localhost:5009/\";\n\n  //Runs when page refreshes\n  componentDidMount()\n  {\n    this.refreshNotes();\n  }\n  \n  //Method below will get notes from the API for this component\n  async refreshNotes() {\n\n    fetch(this.API_URL+\"api/ToDoApp/GetNotes\")\n      .then(response=>response.json())\n      .then(data =>{\n        this.setState({notes: data});\n      })\n  }\n\n  //Method Adds a new task\n  async addNote()\n  {\n    var newNotes = document.getElementById(\"newNotes\").value;\n\n    const data = new FormData();\n\n    data.append(\"newNotes\", newNotes);\n\n    fetch(this.API_URL+`api/ToDoApp/AddNotes`,\n      {\n        method: 'POST',  \n        body: data\n      }\n    ).then(response => response.json())\n    .then((result) => {\n      alert(result);\n      this.refreshNotes();\n    })\n\n    document.getElementById(`newNotes`).value = \"\"\n  } // End of addNote function\n\n  async editNote(id)\n  {\n    var editNotes = document.getElementById(`editNotes_${id}`).value;\n\n    const data = new FormData();\n\n    data.append(\"editNotes\", editNotes);\n\n    fetch(this.API_URL+`api/ToDoApp/EditNotes?id=${id}`,\n      {\n        method: 'POST',  \n        body: data\n      }\n    ).then(response => response.json())\n    .then((result) => {\n      alert(result);\n      this.refreshNotes();\n    })\n\n    document.getElementById(`editNotes_${id}`).value = \"\"\n  } // End of editNote function\n\n  //Method will delete a note entry\n  async deleteNote(id) {\n    fetch(this.API_URL+`api/ToDoApp/DeleteNotes?id=${id}`,\n      {\n        method: 'Delete', //HTTP method for deletion\n        headers: {\n          'Content-Type': 'application/json', \n        }\n      }\n    )\n    .then(()=>this.refreshNotes());\n  }\n\n  async clearAll()\n  {\n    fetch(this.API_URL+`api/ToDoApp/ClearAll`,\n      {\n        method: 'Delete',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    ).then(()=>this.refreshNotes);\n  }\n\n\n\n  render()\n  {\n    const {notes} = this.state;\n    return (\n      <div className=\"App\">\n        <h2>Todo App</h2>\n        <div className='flex-container'>\n            {notes.map(\n              note =>\n                <>\n                  <p className=\"flex-column\">\n                    {note.id}\n                    <b>* {note.description}</b>\n                  </p>\n                  <input className=\"flex-column\" type=\"text\" id={`editNotes_${note.id}`} name=\"editNotes\" />\n                  <button className=\"flex-column\" onClick={()=>this.editNote(note.id)}>Edit</button>\n                  <button className=\"flex-column\" onClick={()=>this.deleteNote(note.id)}>Delete</button>\n                </>\n            )}\n        </div>\n        <div style={{margin: \"auto\", marginTop: \"1rem\", borderStyle: \"solid\", maxWidth: \"20%\"}}>\n          <h3>Add new Task</h3>\n          <input type=\"text\" id=\"newNotes\" name=\"newNotes\" />\n          <button style={{marginBottom: \"1rem\"}} onClick={()=>this.addNote()}>Add Notes</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}