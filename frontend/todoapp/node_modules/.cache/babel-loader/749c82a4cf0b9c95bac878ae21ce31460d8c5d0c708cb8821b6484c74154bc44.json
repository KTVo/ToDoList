{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kevin\\\\OneDrive\\\\Documents\\\\GitHub\\\\ReactJs.NetCoreApiMSSQl\\\\frontend\\\\todoapp\\\\src\\\\App.js\";\nimport './App.css';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.API_URL = \"http://localhost:5009/\";\n    this.state = {\n      notes: []\n    };\n  }\n  //Runs when page refreshes\n  componentDidMount() {\n    this.refreshNotes();\n  }\n\n  //Method below will get notes from the API for this component\n  async refreshNotes() {\n    fetch(this.API_URL + \"api/ToDoApp/GetNotes\").then(response => response.json()).then(data => {\n      this.setState({\n        notes: data\n      });\n    });\n  }\n\n  //Method\n  async addNote() {\n    var newNote = document.getElementById(\"newNote\").value;\n    const data = new FormData();\n    data.append(\"newNote\", newNote);\n    fetch(this.API_URL + `api/ToDoApapi/ToDoApp/AddNotes`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: data\n    }).then(response => response.json()).then(result => {\n      alert(result);\n      this.refreshNotes();\n    });\n  } // End of addNote function\n\n  //Method will delete a note entry\n  async deleteNote(id) {\n    fetch(this.API_URL + `api/ToDoApp/DeleteNotes?id=${id}`, {\n      method: 'Delete',\n      //HTTP method for deletion\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(() => this.refreshNotes());\n  }\n  render() {\n    const {\n      notes\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Todo App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), notes.map(note => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [note.id, /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"* \", note.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.deleteNote(note.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"newNote\",\n        name: \"newNote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.addNote,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Task:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Component","jsxDEV","_jsxDEV","Fragment","_Fragment","App","constructor","props","API_URL","state","notes","componentDidMount","refreshNotes","fetch","then","response","json","data","setState","addNote","newNote","document","getElementById","value","FormData","append","method","headers","body","result","alert","deleteNote","id","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","note","description","onClick","type","name","onSubmit"],"sources":["C:/Users/Kevin/OneDrive/Documents/GitHub/ReactJs.NetCoreApiMSSQl/frontend/todoapp/src/App.js"],"sourcesContent":["import './App.css';\n\nimport { Component } from 'react';\n\nclass App extends Component {\n\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      notes: []\n    }\n  }\n\n  API_URL = \"http://localhost:5009/\";\n\n  //Runs when page refreshes\n  componentDidMount()\n  {\n    this.refreshNotes();\n  }\n  \n  //Method below will get notes from the API for this component\n  async refreshNotes() {\n\n    fetch(this.API_URL+\"api/ToDoApp/GetNotes\")\n      .then(response=>response.json())\n      .then(data =>{\n        this.setState({notes: data});\n      })\n  }\n\n  //Method\n  async addNote()\n  {\n    var newNote = document.getElementById(\"newNote\").value;\n\n    const data = new FormData();\n\n    data.append(\"newNote\", newNote);\n\n    fetch(this.API_URL+`api/ToDoApapi/ToDoApp/AddNotes`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: data\n      }\n    ).then(response => response.json())\n    .then((result) => {\n      alert(result);\n      this.refreshNotes();\n    })\n  } // End of addNote function\n\n  //Method will delete a note entry\n  async deleteNote(id) {\n    fetch(this.API_URL+`api/ToDoApp/DeleteNotes?id=${id}`,\n      {\n        method: 'Delete', //HTTP method for deletion\n        headers: {\n          'Content-Type': 'application/json', \n        }\n      }\n    )\n    .then(()=>this.refreshNotes());\n  }\n\n\n\n  render()\n  {\n    const {notes} = this.state;\n    return (\n      <div className=\"App\">\n        <h2>Todo App</h2>\n        {notes.map(\n          note =>\n            <>\n              <p>\n                {note.id}\n                <b>* {note.description}</b>\n              </p>\n              <button onClick={() => this.deleteNote(note.id)}>Delete</button>\n            </>\n        )}\n\n<input type=\"text\" id=\"newNote\" name=\"newNote\" />\n        <form onSubmit={this.addNote}>\n          <label>\n            Task: \n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}