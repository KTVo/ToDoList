{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kevin\\\\OneDrive\\\\Documents\\\\GitHub\\\\ReactJs.NetCoreApiMSSQl\\\\frontend\\\\todoapp\\\\src\\\\App.js\";\nimport './App.css';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.API_URL = \"http://localhost:5009/\";\n    this.state = {\n      notes: []\n    };\n  }\n  //Runs when page refreshes\n  componentDidMount() {\n    this.refreshNotes();\n  }\n\n  //Method below will get notes from the API for this component\n  async refreshNotes() {\n    fetch(this.API_URL + \"api/ToDoApp/GetNotes\").then(response => response.json()).then(data => {\n      this.setState({\n        notes: data\n      });\n    });\n  }\n\n  //Method\n  async addNote() {\n    var newNotes = document.getElementById(\"newNotes\").value;\n    const data = new FormData();\n    data.append(\"newNotes\", newNotes);\n    fetch(this.API_URL + `api/ToDoApp/AddNotes`, {\n      method: 'POST',\n      body: data\n    }).then(response => response.json()).then(result => {\n      alert(result);\n      this.refreshNotes();\n    });\n  } // End of addNote function\n\n  async editNote(id) {\n    var newNotes = document.getElementById(\"editNotes\").value;\n    const data = new FormData();\n    data.append(\"id\", editNotes);\n    fetch(this.API_URL + `api/ToDoApp/EditNotes?id=${id}`, {\n      method: 'POST',\n      body: data\n    }).then(response => response.json()).then(result => {\n      alert(result);\n      this.refreshNotes();\n    });\n  } // End of editNote function\n\n  //Method will delete a note entry\n  async deleteNote(id) {\n    fetch(this.API_URL + `api/ToDoApp/DeleteNotes?id=${id}`, {\n      method: 'Delete',\n      //HTTP method for deletion\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(() => this.refreshNotes());\n  }\n  render() {\n    const {\n      notes\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Todo App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), notes.map(note => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [note.id, /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"* \", note.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"editNotes\",\n          name: \"editNotes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: id => this.editNote(id),\n          children: \"Edit Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.deleteNote(note.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"newNotes\",\n        name: \"newNotes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.addNote(),\n        children: \"Add Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Component","jsxDEV","_jsxDEV","Fragment","_Fragment","App","constructor","props","API_URL","state","notes","componentDidMount","refreshNotes","fetch","then","response","json","data","setState","addNote","newNotes","document","getElementById","value","FormData","append","method","body","result","alert","editNote","id","editNotes","deleteNote","headers","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","note","description","type","name","onClick"],"sources":["C:/Users/Kevin/OneDrive/Documents/GitHub/ReactJs.NetCoreApiMSSQl/frontend/todoapp/src/App.js"],"sourcesContent":["import './App.css';\n\nimport { Component } from 'react';\n\nclass App extends Component {\n\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      notes: []\n    }\n  }\n\n  API_URL = \"http://localhost:5009/\";\n\n  //Runs when page refreshes\n  componentDidMount()\n  {\n    this.refreshNotes();\n  }\n  \n  //Method below will get notes from the API for this component\n  async refreshNotes() {\n\n    fetch(this.API_URL+\"api/ToDoApp/GetNotes\")\n      .then(response=>response.json())\n      .then(data =>{\n        this.setState({notes: data});\n      })\n  }\n\n  //Method\n  async addNote()\n  {\n    var newNotes = document.getElementById(\"newNotes\").value;\n\n    const data = new FormData();\n\n    data.append(\"newNotes\", newNotes);\n\n    fetch(this.API_URL+`api/ToDoApp/AddNotes`,\n      {\n        method: 'POST',  \n        body: data\n      }\n    ).then(response => response.json())\n    .then((result) => {\n      alert(result);\n      this.refreshNotes();\n    })\n  } // End of addNote function\n\n  async editNote(id)\n  {\n    var newNotes = document.getElementById(\"editNotes\").value;\n\n    const data = new FormData();\n\n    data.append(\"id\", editNotes);\n\n    fetch(this.API_URL+`api/ToDoApp/EditNotes?id=${id}`,\n      {\n        method: 'POST',  \n        body: data\n      }\n    ).then(response => response.json())\n    .then((result) => {\n      alert(result);\n      this.refreshNotes();\n    })\n  } // End of editNote function\n\n  //Method will delete a note entry\n  async deleteNote(id) {\n    fetch(this.API_URL+`api/ToDoApp/DeleteNotes?id=${id}`,\n      {\n        method: 'Delete', //HTTP method for deletion\n        headers: {\n          'Content-Type': 'application/json', \n        }\n      }\n    )\n    .then(()=>this.refreshNotes());\n  }\n\n\n\n  render()\n  {\n    const {notes} = this.state;\n    return (\n      <div className=\"App\">\n        <h2>Todo App</h2>\n        {notes.map(\n          note =>\n            <>\n              <p>\n                {note.id}\n                <b>* {note.description}</b>\n              </p>\n              <input type=\"text\" id=\"editNotes\" name=\"editNotes\" />\n              <button onClick={(id)=>this.editNote(id)}>Edit Notes</button>\n              <button onClick={() => this.deleteNote(note.id)}>Delete</button>\n            </>\n        )}\n\n        <input type=\"text\" id=\"newNotes\" name=\"newNotes\" />\n        <button onClick={()=>this.addNote()}>Add Notes</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}