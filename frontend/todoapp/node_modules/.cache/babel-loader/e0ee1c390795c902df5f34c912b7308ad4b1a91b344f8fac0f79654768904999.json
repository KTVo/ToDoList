{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kevin\\\\OneDrive\\\\Documents\\\\GitHub\\\\ReactJs.NetCoreApiMSSQl\\\\frontend\\\\todoapp\\\\src\\\\App.js\";\nimport './App.css';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.API_URL = \"http://localhost:5009/\";\n    this.state = {\n      notes: []\n    };\n  }\n  //Runs when page refreshes\n  componentDidMount() {\n    this.refreshNotes();\n  }\n\n  //Method below will get notes from the API for this component\n  async refreshNotes() {\n    fetch(this.API_URL + \"api/ToDoApp/GetNotes\").then(response => response.json()).then(data => {\n      this.setState({\n        notes: data\n      });\n    });\n  }\n\n  //Method will delete a note entry\n  async deleteNote(id) {\n    fetch(this.API_URL + `api/ToDoApp/DeleteNotes?id=${id}`, {\n      method: 'Delete',\n      //HTTP method for deletion\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n  render() {\n    const {\n      notes\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Todo App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), notes.map(note => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [note.id, /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"* \", note.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n      // <button onClick={(note.id)=>deleteNote(note.id)}>Delete</button>\n      )]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Component","jsxDEV","_jsxDEV","App","constructor","props","API_URL","state","notes","componentDidMount","refreshNotes","fetch","then","response","json","data","setState","deleteNote","id","method","headers","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","note","description"],"sources":["C:/Users/Kevin/OneDrive/Documents/GitHub/ReactJs.NetCoreApiMSSQl/frontend/todoapp/src/App.js"],"sourcesContent":["import './App.css';\n\nimport { Component } from 'react';\n\nclass App extends Component {\n\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      notes: []\n    }\n  }\n\n  API_URL = \"http://localhost:5009/\";\n\n  //Runs when page refreshes\n  componentDidMount()\n  {\n    this.refreshNotes();\n  }\n  \n  //Method below will get notes from the API for this component\n  async refreshNotes() {\n\n    fetch(this.API_URL+\"api/ToDoApp/GetNotes\")\n      .then(response=>response.json())\n      .then(data =>{\n        this.setState({notes: data});\n      })\n  }\n\n  //Method will delete a note entry\n  async deleteNote(id) {\n    fetch(this.API_URL+`api/ToDoApp/DeleteNotes?id=${id}`,\n      {\n        method: 'Delete', //HTTP method for deletion\n        headers: {\n          'Content-Type': 'application/json', \n        }\n      }\n    );\n  }\n\n  render()\n  {\n    const {notes} = this.state;\n    return (\n      <div className=\"App\">\n        <h2>Todo App</h2>\n        {notes.map(\n          note =>\n            <p>\n              {note.id}\n              <b>* {note.description}</b>\n            </p>\n            // <button onClick={(note.id)=>deleteNote(note.id)}>Delete</button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAElB,SAASA,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,GAAG,SAASH,SAAS,CAAC;EAE1BI,WAAWA,CAACC,KAAK,EACjB;IACE,KAAK,CAACA,KAAK,CAAC;IAAC,KAMfC,OAAO,GAAG,wBAAwB;IALhC,IAAI,CAACC,KAAK,GAAG;MACXC,KAAK,EAAE;IACT,CAAC;EACH;EAIA;EACAC,iBAAiBA,CAAA,EACjB;IACE,IAAI,CAACC,YAAY,CAAC,CAAC;EACrB;;EAEA;EACA,MAAMA,YAAYA,CAAA,EAAG;IAEnBC,KAAK,CAAC,IAAI,CAACL,OAAO,GAAC,sBAAsB,CAAC,CACvCM,IAAI,CAACC,QAAQ,IAAEA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAC/BF,IAAI,CAACG,IAAI,IAAG;MACX,IAAI,CAACC,QAAQ,CAAC;QAACR,KAAK,EAAEO;MAAI,CAAC,CAAC;IAC9B,CAAC,CAAC;EACN;;EAEA;EACA,MAAME,UAAUA,CAACC,EAAE,EAAE;IACnBP,KAAK,CAAC,IAAI,CAACL,OAAO,GAAC,8BAA8BY,EAAE,EAAE,EACnD;MACEC,MAAM,EAAE,QAAQ;MAAE;MAClBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CACF,CAAC;EACH;EAEAC,MAAMA,CAAA,EACN;IACE,MAAM;MAACb;IAAK,CAAC,GAAG,IAAI,CAACD,KAAK;IAC1B,oBACEL,OAAA;MAAKoB,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBrB,OAAA;QAAAqB,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAChBnB,KAAK,CAACoB,GAAG,CACRC,IAAI,iBACF3B,OAAA;QAAAqB,QAAA,GACGM,IAAI,CAACX,EAAE,eACRhB,OAAA;UAAAqB,QAAA,GAAG,IAAE,EAACM,IAAI,CAACC,WAAW;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B;MACH;MACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV;AACF;AAEA,eAAexB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}